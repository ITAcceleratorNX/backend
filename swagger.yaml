openapi: 3.0.0
info:
  title: Auth API + WebSocket Chat
  version: 1.0.1
  description: |
    Документация по авторизации и WebSocket чату.

servers:
  - url: https://extraspace-backend.onrender.com

paths:
  /auth/google:
    get:
      summary: Авторизация через Google
      description: Редиректит на Google OAuth
      responses:
        '302':
          description: Редирект на Google

  /auth/google/callback:
    get:
      summary: Callback после Google OAuth
      responses:
        '302':
          description: Редирект на главную страницу при успехе или неудаче

  /auth/email:
    post:
      summary: Проверка email — зарегистрирован или нет
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email]
              properties:
                email:
                  type: string
                  example: user@example.com
      responses:
        '200':
          description: Информация о наличии пользователя
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_exists:
                    type: boolean
                  email:
                    type: string
        '400':
          description: Email не передан
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Email is required
        '500':
          description: Внутренняя ошибка

  /auth/login:
    post:
      summary: Логин пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: mypassword123
      responses:
        '200':
          description: Успешный логин
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
        '400':
          description: Ошибка валидации или неверные данные
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: object
                    example:
                      email_error: Email is required
                      password_error: Password is required

  /auth/register:
    post:
      summary: Регистрация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password, unique_code]
              properties:
                email:
                  type: string
                  example: user@example.com
                unique_code:
                  type: string
                  example: "123456"
                password:
                  type: string
                  example: mypassword123
      responses:
        '201':
          description: Успешная регистрация
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
        '400':
          description: Ошибка валидации или недостающие поля
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: object
                    example:
                      email_error: Email is required
                      unique_code_error: Unique code is required
                      password_error: Password is required

  /check-email:
    post:
      summary: Проверка существования email
      description: Это нужно для отправить перед восстановление пароля.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
      responses:
        "200":
          description: Успешная проверка email
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_exists:
                    type: boolean
                  email:
                    type: string
        "400":
          description: Email не передан
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Email is required"

  /restore-password:
    post:
      summary: Восстановление пароля
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - unique_code
                - password
              properties:
                email:
                  type: string
                  format: email
                unique_code:
                  type: string
                password:
                  type: string
                  format: password
      responses:
        "200":
          description: Пароль успешно восстановлен
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        "400":
          description: Ошибка валидации или неправильный код
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: object
                    additionalProperties:
                      type: string
        "500":
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string

# --- WebSocket documentation section (non-standard) ---
components:
  schemas:
    WebSocketMessage:
      type: object
      required: [type]
      properties:
        type:
          type: string
          example: START_CHAT
        userId:
          type: integer
          example: 5

x-websocket:
  url: ws://localhost:3000?userId={userId}
  description: |
    WebSocket сервер для чатов.
    При подключении необходимо передать `userId` в query параметрах.

    **Типы входящих сообщений (от клиента):**
    - `START_CHAT`: создать чат
    - `SEND_MESSAGE`: отправить сообщение
    - `ACCEPT_CHAT`: менеджер принимает чат

    **Типы исходящих сообщений (от сервера):**
    - `WAITING_FOR_MANAGER`: ожидание ответа менеджера
    - `NEW_CHAT`: уведомление менеджерам о новом чате
    - `CHAT_ACCEPTED`: чат принят
    - `NEW_MESSAGE`: новое сообщение
    - `CHAT_TAKEN`: чат уже принят другим менеджером

  examples:
    START_CHAT:
      summary: Начать чат
      value:
        type: START_CHAT
        userId: 5

    SEND_MESSAGE:
      summary: Отправка сообщения
      value:
        type: SEND_MESSAGE
        chatId: 1
        senderId: 5
        message: "Привет!"
        isFromUser: true

    ACCEPT_CHAT:
      summary: Принятие чата
      value:
        type: ACCEPT_CHAT
        chatId: 1
        managerId: 2
