#!/usr/bin/env node
import appFactory from "../src/main/config/factory/appFactory.js";
import debug from 'debug';

const serverDebug = debug('extraspace:server');

const { app, server } = appFactory();
const port = normalizePort(process.env.PORT || '5000');
app.set('port', port);

server.listen(port);
server.on('error', (error) => onError(error, port));
server.on('listening', onListening);

function normalizePort(val) {
  const port = parseInt(val, 10);
  if (isNaN(port)) return val;
  if (port >= 0) return port;
  return false;
}

function onError(error, port) {
  if (error.syscall !== 'listen') throw error;

  const bind = typeof port === 'string'
      ? 'Pipe ' + port
      : 'Port ' + port;

  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
    default:
      throw error;
  }
}

function onListening() {
  const addr = server.address();
  const bind = typeof addr === 'string'
      ? 'pipe ' + addr
      : 'port ' + addr.port;
  serverDebug('Listening on ' + bind);
  console.log(addr.port)
}
