import { Op } from 'sequelize';
import { OrderPayment, Order, User } from '../../models/init/index.js';
import { NotificationService } from '../notification/notification.service.js';
import dayjs from 'dayjs';

export async function notifyManualPaymentsAfter10Days() {
    const notificationService = new NotificationService();
    const tenDaysAgo = dayjs().subtract(10, 'day').toDate();

    const manualPayments = await OrderPayment.findAll({
        where: {
            status: 'MANUAL',
            paid_at: {
                [Op.lte]: tenDaysAgo
            }
        },
        include: [
            {
                model: Order,
                as: 'order',
                include: [
                    {
                        model: User,
                        as: 'user'
                    }
                ]
            }
        ]
    });

    for (const payment of manualPayments) {
        const user = payment.order?.user;
        if (!user) continue;

        await notificationService.sendNotification({
            user_id: user.id,
            title: '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ–± –æ–ø–ª–∞—Ç–µ',
            message: `–í–∞—à –ø–ª–∞—Ç—ë–∂ –∑–∞ –∑–∞–∫–∞–∑ #${payment.order_id} –≤—Å—ë –µ—â—ë –Ω–µ –æ–ø–ª–∞—á–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≤–µ—Ä—à–∏—Ç–µ –æ–ø–ª–∞—Ç—É –≤ Extraspace.`,
            notification_type: 'payment',
            related_order_id: payment.id,
            is_email: true,
            is_sms: true
        });

        console.log(`üì® –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: user_id ${user.id}, order_payment ${payment.id}`);
    }
}
export async function handleLateManualPayments() {
    const notificationService = new NotificationService();
    const today = dayjs();

    const manualPayments = await OrderPayment.findAll({
        where: { status: 'MANUAL' },
        include: [
            {
                model: Order,
                as: 'order',
                include: [
                    {
                        model: User,
                        as: 'user'
                    }
                ]
            }
        ]
    });

    for (const payment of manualPayments) {
        const user = payment.order?.user;
        const order = payment.order;

        if (!user || !payment.paid_at) continue;

        const daysLate = today.diff(dayjs(payment.paid_at), 'day');

        if (daysLate > 30) {
            const penaltyDays = daysLate - 30;
            const penaltyPercentPerDay = 0.005;
            const penaltyAmount = Number((parseFloat(payment.amount) * penaltyPercentPerDay * penaltyDays).toFixed(2));
            payment.penalty_amount = penaltyAmount;
            await payment.save();

            await notificationService.sendNotification({
                user_id: user.id,
                title: '–ù–∞—á–∏—Å–ª–µ–Ω —à—Ç—Ä–∞—Ñ –∑–∞ –ø—Ä–æ—Å—Ä–æ—á–∫—É',
                message: `–í—ã –Ω–µ –æ–ø–ª–∞—Ç–∏–ª–∏ –∑–∞–∫–∞–∑ #${payment.order_id} –±–æ–ª–µ–µ ${daysLate} –¥–Ω–µ–π. –ù–∞—á–∏—Å–ª–µ–Ω–∞ –ø–µ–Ω—è: ${penaltyAmount} ‚Ç∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–ª–∞—Ç–∏—Ç–µ –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ.`,
                notification_type: 'payment',
                related_order_id: payment.id,
                is_email: true,
                is_sms: true
            });

            console.log(`üí∏ –ù–∞—á–∏—Å–ª–µ–Ω–∞ –ø–µ–Ω—è ${penaltyAmount}‚Ç∏ –¥–ª—è payment_id ${payment.id}`);
        }

        if (daysLate > 60 && order.status !== 'INACTIVE') {
            order.status = 'INACTIVE';
            await order.save();

            await notificationService.sendNotification({
                user_id: user.id,
                title: '–ö–æ–Ω—Ç—Ä–∞–∫—Ç —Ä–∞—Å—Ç–æ—Ä–≥–Ω—É—Ç',
                message: `–í–∞—à –∫–æ–Ω—Ç—Ä–∞–∫—Ç –ø–æ –∑–∞–∫–∞–∑—É #${payment.order_id} –±—ã–ª —Ä–∞—Å—Ç–æ—Ä–≥–Ω—É—Ç –∏–∑-–∑–∞ –Ω–µ—É–ø–ª–∞—Ç—ã –±–æ–ª–µ–µ 2 –º–µ—Å—è—Ü–µ–≤.`,
                notification_type: 'contract',
                related_order_id: payment.id,
                is_email: true,
                is_sms: true
            });

            console.log(`üìõ –ö–æ–Ω—Ç—Ä–∞–∫—Ç —Ä–∞—Å—Ç–æ—Ä–≥–Ω—É—Ç –¥–ª—è order_id ${order.id}`);
        }
    }
}
